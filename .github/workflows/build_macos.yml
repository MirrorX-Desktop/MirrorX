name: build_macos

on:
  push:
    tags:
      - "v*"

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: macos-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v2.5.0
      - name: setup node.js
        uses: actions/setup-node@v3.5.1
      - name: enable yarn v3
        run: corepack enable
      - name: setup rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Download Pre Built Media Libraries Zip
        uses: robinraju/release-downloader@v1.6
        with:
          repository: "MirrorX-Desktop/media_libraries_auto_build"
          tag: "latest"
          fileName: "artifacts_macos_x64.zip"
      - name: Unzip Pre Built Media Libraries
        run: |
          7z x artifacts_macos_x64.zip -o./artifacts_macos_x64
      - name: ls
        run: |
          ls -la
      - name: Set Pre Built Media Libraries Path
        run: |
          echo "MIRRORX_MEDIA_LIBS_PATH=${{github.workspace}}/artifacts_macos_x64" >> $GITHUB_ENV
      - name: setup tauri-cli
        uses: baptiste0928/cargo-install@v1
        with:
          crate: tauri-cli
          version: "1.2.0"
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: build
        run: cargo tauri build
      - name: Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "./target/release/bundle/dmg/*.dmg"
          tag: ${{github.ref_name}}
          allowUpdates: true
